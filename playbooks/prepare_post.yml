---

- import_playbook: check_op.yml

- name: "[PREPARE_POST] prepare post installation"
  hosts: localhost
  connection: local
  vars:
    ansible_user: "{{ lookup('env', 'USER') }}"
    ansible_user_dir: "/home/{{ lookup('env', 'USER') }}"
  tasks:
    - name: "include secrets file"
      include_vars:
        file: "{{ playbook_dir | dirname }}/roles/post_install/vars/op.yml"

    - name: "Dropbox sync"
      debug:
        msg: "Sync Dropbox with the following pass: {{ lookup('onepassword', op.item1, label='password') }}"

    - name: "get gpg data"
      set_fact:
        doc1_filename: "{{ lookup('onepassword', op.doc1.id, label='name', vault=op.doc1.vault) }}"
        doc1_passphrase: "{{ lookup('onepassword', op.doc1.id, label='passphrase', vault=op.doc1.vault) }}"
        doc2_filename: "{{ lookup('onepassword', op.doc2.id, label='name', vault=op.doc2.vault) }}"
        doc2_passphrase: "{{ lookup('onepassword', op.doc2.id, label='passphrase', vault=op.doc2.vault) }}"
        doc3_filename: "{{ lookup('onepassword', op.doc3.id, label='name', vault=op.doc3.vault) }}"
        doc3_passphrase: "{{ lookup('onepassword', op.doc3.id, label='passphrase', vault=op.doc3.vault) }}"

    - name: "download gpg files"
      command: "{{ item }}"
      loop:
        - "op document get '{{ op.doc1.id }}' --output {{ ansible_user_dir }}/{{ doc1_filename }}"
        - "op document get '{{ op.doc2.id }}' --output {{ ansible_user_dir }}/{{ doc2_filename }}"
        - "op document get '{{ op.doc3.id }}' --output {{ ansible_user_dir }}/{{ doc3_filename }}"

    - name: "create directories to uncompress gpg files"
      file:
        path: "{{ ansible_user_dir }}/{{ item[:-4] }}"
        state: directory
        mode: 0755
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - "{{ doc1_filename }}"
        - "{{ doc2_filename }}"
        - "{{ doc3_filename }}"

    - name: "uncompress gpg files"
      unarchive:
        src: "{{ item }}"
        dest: "{{ item[:-4] }}"
      loop:
        - "{{ ansible_user_dir }}/{{ doc1_filename }}"
        - "{{ ansible_user_dir }}/{{ doc2_filename }}"
        - "{{ ansible_user_dir }}/{{ doc3_filename }}"

    - name: "import GPG pub keys"
      gpg_key:
        file: "{{ item }}"
        state: present
      loop:
        - "{{ ansible_user_dir }}/{{ doc1_filename[:-4] }}/pub"
        - "{{ ansible_user_dir }}/{{ doc2_filename[:-4] }}/pub"
        - "{{ ansible_user_dir }}/{{ doc3_filename[:-4] }}/pub"

    - name: "[PERSONAL] please copy this passphrase"
      debug: var=doc1_passphrase

    - pause:

    - name: "[PERSONAL] import GPG priv key"
      gpg_key:
        file: "{{ ansible_user_dir }}/{{ doc1_filename[:-4] }}/priv"
        trust: '5'
        state: present

    - name: "[WORK] please copy this passphrase"
      debug: var=doc2_passphrase

    - pause:

    - name: "[WORK] import GPG priv key"
      gpg_key:
        file: "{{ ansible_user_dir }}/{{ doc2_filename[:-4] }}/priv"
        trust: '5'
        state: present

    - name: "[PROTON] please copy this passphrase"
      debug: var=doc3_passphrase

    - pause:

    - name: "[PROTON] import GPG priv key"
      gpg_key:
        file: "{{ ansible_user_dir }}/{{ doc3_filename[:-4] }}/priv"
        trust: '5'
        state: present

    - name: "delete previous '{{ playbook_dir | dirname }}/roles/post_install/defaults/main.yml'"
      file:
        path: "{{ playbook_dir | dirname }}/roles/post_install/defaults/main.yml"
        state: absent

    - name: "[PERSONAL] please copy this passphrase"
      debug: var=doc1_passphrase

    - pause:

    - name: "decrypt 'roles/post-install/defaults/main.yml.gpg'"
      shell: "gpg --batch --yes --output ../roles/post_install/defaults/main.yml --decrypt ../roles/post_install/defaults/main.yml.gpg"
      register: private_response
      changed_when: "'not changed' not in private_response.stderr"
      args:
        stdin: "{{ doc1_passphrase }}"
        stdin_add_newline: false

    - name: "delete temporal files"
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_user_dir }}/{{ doc1_filename }}"
        - "{{ ansible_user_dir }}/{{ doc1_filename[:-4] }}"
        - "{{ ansible_user_dir }}/{{ doc2_filename }}"
        - "{{ ansible_user_dir }}/{{ doc2_filename[:-4] }}"
        - "{{ ansible_user_dir }}/{{ doc3_filename }}"
        - "{{ ansible_user_dir }}/{{ doc3_filename[:-4] }}"
