#!/bin/bash

bw login {{ bw.user }}

read -sp "BW_SESSION: " SESSION
export BW_SESSION=$SESSION

echo "DROPBOX: $(bw get password {{ bw.item1 }})"

echo "$(bw get item {{ bw.doc1.id }} | jq .name)..."
bw get attachment {{ bw.doc1.file.filename }} --itemid {{ bw.doc1.id }}
unzip ~/{{ bw.doc1.file.filename }} -d ~/
gpg --import ~/pub
echo "$(bw get item {{ bw.doc1.id }} | jq -r '.fields[0].value')" | gpg --batch --yes --passphrase-fd 0 --import ~/priv
rm -fr ~/pub ~/priv ~/revoke ~/{{ bw.doc1.file.filename }}

echo "$(bw get item {{ bw.doc2.id }} | jq .name)..."
bw get attachment {{ bw.doc2.file.filename }} --itemid {{ bw.doc2.id }}
unzip ~/{{ bw.doc2.file.filename }} -d ~/
gpg --import ~/pub
echo "$(bw get item {{ bw.doc2.id }} | jq -r '.fields[0].value')" | gpg --batch --yes --passphrase-fd 0 --import ~/priv
rm -fr ~/pub ~/priv ~/revoke ~/{{ bw.doc2.file.filename }}

echo "TRUSTING..."
for fpr in $(gpg --list-keys --with-colons  | awk -F: '/fpr:/ {print $10}' | sort -u); do
  echo -e '5\ny\n' |  gpg --command-fd 0 --expert --edit-key $fpr trust
done

echo "GPG passphrase: $(bw get item {{ bw.doc1.id }} | jq -r '.fields[0].value')"
read -rsp 'Press any key to continue...' -n1 key

echo "DECRYPTING..."
gpg --batch --yes --passphrase "$(bw get item {{ bw.doc1.id }} | jq -r '.fields[0].value')" --output roles/post_install/defaults/main.yml --decrypt roles/post_install/defaults/main.yml.gpg
