---

- name: "[KDE_BACKUP] [KDE] Wait until dropbox files exist"
  wait_for:
    path: "{{ kde_backup_dir }}"
    timeout: "{{ wait_dropbox_sync }}"

- name: "[KDE_BACKUP] [KDE] search kde config files not backed up yet"
  find:
    path: "{{ ansible_user_dir }}/.config"
    file_type: file
  register: find_response

- name: "[KDE_BACKUP] [KDE] backing up KDE config"
  vars:
    id_query: "[].path"
  copy:
    remote_src: true
    src: "{{ item }}"
    dest: "{{ kde_backup_dir }}/{{ item | basename }}"
  loop: "{{ find_response.files | json_query(id_query) }}"

- name: "[KDE_BACKUP] [KDE] removing original files"
  vars:
    id_query: "[].path"
  file:
    path: "{{ item }}"
    state: absent
  loop: "{{ find_response.files | json_query(id_query) }}"

- name: "[KDE_BACKUP] [KDE] creating links to backup files"
  vars:
    id_query: "[].path"
  file:
    src: "{{ kde_backup_dir }}/{{ item | basename }}"
    path: "{{ item }}"
    state: link
  loop: "{{ find_response.files | json_query(id_query) }}"
