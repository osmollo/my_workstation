---

- name: "[ENVIRONMENT] Configure /etc/hosts"
  become: true
  become_method: sudo
  lineinfile:
    path: /etc/hosts
    line: "{{ item.ip }}    {{ item.host }}"
    mode: 0644
  loop: "{{ etc_hosts }}"
  tags:
    - etc_hosts

- name: "[ENVIRONMENT] Delete default files"
  become: true
  become_method: sudo
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ ssh_dir }}"
    - "{{ ansible_user_dir }}/.bashrc"
    - "{{ ansible_user_dir }}/.bash_history"
    - "{{ ansible_user_dir }}/.bash_aliases"
    - "{{ ansible_user_dir }}/.vault_pass*"
    - "{{ ansible_user_dir }}/.oh-my-zsh/custom/themes"
    - "{{ ansible_user_dir }}/.zhistory"
    - "{{ ansible_user_dir }}/.zsh_history"

- name: "[ENVIRONMENT] create .aliases"
  import_tasks: shell_aliases.yml
  tags:
    - config_files
    - bash_aliases
    - shell_aliases
    - aliases

- name: "[ENVIRONMENT] create .environment"
  template:
    src: "environment.j2"
    dest: "{{ ansible_user_dir }}/.environment"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600
  tags:
    - config_files
    - bash_config
    - ohmybash
    - ohmyzsh

- name: "[ENVIRONMENT] create .ssh directory"
  file:
    path: "{{ ssh_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0750
  tags:
    - ssh_config
    - ssh_keys

- name: "[ENVIRONMENT] configure oh-my-zsh"
  vars:
    ansible_ssh_private_key_file: "{{ ssh_dir }}/id_rsa"
  import_tasks: oh_my_zsh.yml
  tags:
    - oh-my-zsh
    - ohmyzsh

- name: "[ENVIRONMENT] configure oh-my-bash"
  import_tasks: oh_my_bash.yml
  tags:
    - oh-my-bash
    - ohmybash

- name: "[ENVIRONMENT] copy powerline truetype fonts"
  import_tasks: fonts.yml
  tags:
    - deploy_fonts

- name: "configure ssh entries"
  import_tasks: ssh_config.yml
  tags:
    - ssh_config
    - config_files

- name: "configure 1Password ssh-agent"
  tags:
    - 1password
    - 1password_agent
    - 1password_sshagent
    - 1password_ssh_agent
  block:
    - name: "create 1Password directory"
      file:
        path: "{{ ansible_user_dir }}/.config/1Password/ssh"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0700

    - name: "create 1Password agent configuration file"
      copy:
        content: |
          [[ssh-keys]]
          item = "osmollo"
          vault = "ssh"
          
          [[ssh-keys]]
          item = "securitas ed25519"
          vault = "ssh"
          
          [[ssh-keys]]
          item = "nagios"
          vault = "ssh"
        dest: "{{ ansible_user_dir }}/.config/1Password/ssh/agent.toml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0600

- block:
    - name: "[ENVIRONMENT] Wait until dropbox files exist"
      wait_for:
        path: "{{ item.src }}"
        timeout: "{{ wait_dropbox_sync }}"
      loop: "{{ links_to_create }}"

#    - name: "[ENVIRONMENT] configure fish shell"
#      import_tasks: fish.yml
#      tags:
#        - fish

    - name: "[ENVIRONMENT] Create links from Dropbox"
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop: "{{ links_to_create }}"

    - name: "[ENVIRONMENT] load tilix configuration"
      shell: "dconf load / < {{ dropbox_dir }}/backups/gnome/tilix"

    - name: "[ENVIRONMENT] configure warp-terminal"
      import_tasks: warp.yml

    - name: "[ENVIRONMENT] create '{{ git_dir }}'"
      file:
        path: "{{ git_dir }}"
        state: directory

    - name: "[ENVIRONMENT] link to 'update_remote.sh'"
      file:
        src: "{{ dropbox_dir }}/bin/osmollo/update_remote.sh"
        dest: "{{ git_dir }}/update_remote.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755
        state: link
