---

- name: "[ENVIRONMENT] Configure /etc/hosts"
  become: true
  become_method: sudo
  lineinfile:
    path: /etc/hosts
    line: "{{ item.ip }}\t{{ item.host }}"
  loop: "{{ etc_hosts }}"
  tags:
    - etc_hosts

- name: "[ENVIRONMENT] Delete default files"
  become: true
  become_method: sudo
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ ansible_user_dir }}/.bashrc"
    - "{{ ansible_user_dir }}/.bash_history"
    - "{{ ansible_user_dir }}/.bash_aliases"
    - "{{ ansible_user_dir }}/.zshrc"
    - "{{ ssh_dir }}"
    - "{{ ansible_user_dir }}/.vault_pass*"
    - "{{ ansible_user_dir }}/.oh-my-zsh/custom/themes"
    - "{{ ansible_user_dir }}/.zhistory"
    - "{{ ansible_user_dir }}/.zsh_history"
    
- name: "[ENVIRONMENT] create .ssh directories"
  file:
    path: "{{ ansible_user_dir }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - ".ssh"
    - ".ssh/aws"
    - ".ssh/isilon"
    - ".ssh/ccr"
  tags:
    - ssh_config
    - ssh_keys

- name: "[ENVIRONMENT] create .bash_aliases"
  template:
    src: bash_aliases.j2
    dest: "{{ ansible_user_dir }}/.bash_aliases"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags:
    - config_files
    - bash_aliases

- name: "[ENVIRONMENT] create .bashrc"
  template:
    src: "bashrc.j2"
    dest: "{{ ansible_user_dir }}/.bashrc"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags:
    - config_files
    - bash_config

- name: "[ENVIRONMENT] create ssh keys"
  copy:
    dest: "{{ item.path }}"
    content: "{{ item.key }}"
    mode: "0600"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop: "{{ ssh_keys }}"
  loop_control:
    label: "{{ item.path }}"
  no_log: true
  tags:
    - ssh_keys

- name: "configure ssh entries"
  blockinfile:
    path: "{{ ansible_user_dir }}/.ssh/config"
    block: |
      Host {{ item.name }}
        ForwardAgent yes
      {% if item.serveraliveinternal is defined %}
        ServerAliveInternal {{ item.serveraliveinternal }}
      {% endif %}
      {% if item.serveralivecountmax is defined %}
        ServerAliveCountMax {{ item.serveralivecountmax }}
      {% endif %}
      {% if item.stricthostkeychecking is defined %}
        StrictHostKeyChecking {{ item.stricthostkeychecking }}
      {% endif %}
      {% if item.forwardagent is defined %}
        ForwardAgent {{ item.forwardagent }}
      {% endif %}
      {% if item.hostname is defined %}
        Hostname {{ item.hostname }}
      {% endif %}
      {% if item.user is defined %}
        User {{ item.user }}
      {% endif %}
      {% if item.identity_file is defined %}
        IdentityFile {{ item.identity_file }}
      {% endif %}
    state: present
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop: "{{ ssh_config_entries }}"
  loop_control:
    label: "{{ item.name }}"
  tags:
    - ssh_config
    - config_files

- name: "[ENVIRONMENT] create vault_pass files"
  lineinfile:
    path: "{{ ansible_user_dir }}/{{ item.name }}"
    line: "{{ item.content }}"
    create: true
  no_log: true
  loop:
    - name: .vault_pass_personal
      content: "{{ vault_personal_pass }}"
    - name: .vault_pass_datio
      content: "{{ vault_datio_pass }}"

- name: "[ENVIRONMENT] create link to vault_pass file"
  file:
    src: "{{ ansible_user_dir }}/.vault_pass_personal"
    dest: "{{ ansible_user_dir }}/.vault_pass"
    state: link

- name: "[ENVIRONMENT] configure prezto"
  import_tasks: prezto.yml
  tags:
    - prezto
    - post_prezto

- name: "[ENVIRONMENT] Create links from Dropbox"
  block:
    - name: "[ENVIRONMENT] Wait until dropbox files exist"
      wait_for:
        path: "{{ item.src }}"
        timeout: "{{ wait_dropbox_sync }}"
      loop: "{{ links_to_create }}"

    - name: "[ENVIRONMENT] Create links from Dropbox"
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop: "{{ links_to_create }}"
