---

- name: "[GIT] install broot"
  block:
    - name: "[GIT] download broot binary"
      become: true
      get_url:
        url: "{{ broot_binary_url }}"
        dest: /usr/local/bin/broot
        mode: 0755

    - name: "[GIT] create broot config directory"
      file:
        path: "{{ ansible_user_dir }}/.config/broot"
        state: directory

    - name: "[GIT] configure broot"
      copy:
        src: git-diff-conf.toml
        dest: "{{ ansible_user_dir }}/.config/broot/git-diff-conf.toml"
        mode: 0644

    - name: "[GIT] create alias for broot"
      vars:
        alias_name: gg
        alias_command: '/usr/local/bin/broot --conf ~/.config/broot/git-diff-conf.toml --git-status'
      import_role:
        name: tools/create_alias
  tags:
    - broot

- name: "[GIT] configure git diff config"
  block:
    - name: "check if meld is installed"
      command: which meld
      register: meld_response
      changed_when: false
      ignore_errors: true

    - name: "[GIT] check if kompare is installed"
      command: which kompare
      register: kompare_response
      ignore_errors: true

    - name: "[GIT] configure git"
      vars:
        diff_editor: "{{ 'meld' if meld_response.rc == 0 else 'kompare' if kompare_response.rc == 0 }}"
      blockinfile:
        path: "{{ ansible_user_dir }}/.gitconfig"
        mode: 0644
        create: true
        block: |
          [diff]
            tool = {{ diff_editor }}

          [difftool]
              prompt = false

          [difftool "{{ diff_editor }}"]
              cmd = {{ diff_editor }} "$LOCAL" "$REMOTE"

          [branch]
              sort = -committerdate

          [merge]
              tool = {{ diff_editor }}

          [mergetool "{{ diff_editor }}"]
              cmd = {{ diff_editor }} "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"

          [gpg]
            format = ssh

          [gpg "ssh"]
            program = "/opt/1Password/op-ssh-sign"

          [commit]
            gpgsign = true

          [help]
            autocorrect = immediate
  tags:
    - git_diff
    - git_config

- name: "[GIT] clone repositories"
  tags:
    - git_clone
  block:
    - name: "[GIT] Configure user name"
      git_config:
        name: user.name
        scope: global
        value: "{{ git_config.user_name }}"
      tags:
        - git_legacy

    - name: "[GIT] Create {{ git_dir }}"
      file:
        path: "{{ git_dir }}"
        state: directory
        mode: 0750
      tags:
        - git_legacy

    - name: "[GIT] [HOME] clone repository"
      include_role:
        name: tools/git_clone
        apply:
          tags:
            - git_home
      loop: "{{ git_repositories.home }}"
      vars:
        git_config_user_email: "{{ git_config.user_email_home }}"
        git_config_signingkey: "{{ lookup('onepassword', 'op://ssh/osmollo/public key') }}"
        git_work: false
      tags:
        - git_home

    - name: "[GIT] [LEGACY] clone repository"
      include_role:
        name: tools/git_clone
        apply:
          tags:
            - git_legacy
      loop: "{{ git_repositories.legacy }}"
      vars:
        git_config_user_email: "{{ git_config.user_email_home }}"
        git_config_signingkey: "{{ lookup('onepassword', 'op://ssh/osmollo/public key') }}"
        git_work: true
      tags:
        - git_legacy
