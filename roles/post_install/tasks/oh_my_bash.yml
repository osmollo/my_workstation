---

- name: "[OHMYBASH] check if ~/.bashrc exists"
  stat:
    path: "{{ ansible_env.HOME }}/.bashrc"
  register: stat_response

- name: "[OHMYBASH] creating backup"
  copy:
    src: "{{ ansible_env.HOME }}/.bashrc"
    dest: "{{ ansible_env.HOME }}/.bashrc.bkp"
    remote_src: true
  when: stat_response.stat.exists

- name: "[OHMYBASH] delete previous installation"
  file:
    path: "{{ ansible_user_dir }}/.{{ item }}"
    state: absent
  loop:
    - bash
    - oh-my-bash

- name: "[OHMYBASH] install my oh-my-bash fork'"
  become: true
  become_method: sudo
  import_tasks: ../extra_software/tasks/shell/oh_my_bash.yml
  vars:
    ohmybash_installer: https://raw.githubusercontent.com/osmollo/oh-my-bash/master/tools/install.sh
    from_post_install: true

- name: "[OHMYBASH] delete .bashrc"
  file:
    path: "{{ ansible_user_dir }}/.{{ item }}"
    state: absent
  loop:
    - bashrc
    - bash_history
    - bash_logout
    - bash_profile
  ignore_errors: true

- name: "[OHMYBASH] create link to .bashrc"
  file:
    src: "{{ ansible_user_dir }}/.oh-my-bash/bash_config/my_workstation"
    dest: "{{ ansible_user_dir }}/.bashrc"
    state: link

- name: "[OHMYBASH] Create new remote for presto original source"
  shell: "git remote add upstream {{ ohmybash_repo }}"
  args:
    chdir: "{{ ansible_user_dir }}/.oh-my-bash"
  failed_when: false
  vars:
    ohmybash_repo: git@github.com:ohmybash/ohmybash.git

- name: "[OHMYBASH] Configure 'user.name' for oh-my-bash repo"
  shell: "git config user.name {{ git_config.user_name }}"
  args:
    chdir: "{{ ansible_user_dir }}/.oh-my-bash"

- name: "[OHMYBASH] Configure 'user.email' for oh-my-bash repo"
  shell: "git config user.email {{ git_config.user_email_home }}"
  args:
    chdir: "{{ ansible_user_dir }}/.oh-my-bash"

- name: "[OHMYBASH] replace origin repo url"
  git_config:
    repo: '{{ ansible_user_dir }}/.oh-my-bash'
    scope: 'local'
    name: 'remote.origin.url'
    value: 'git@github.com:osmollo/oh-my-bash.git'

- name: "[OHMYBASH] install submodules"
  shell: git submodule update --init --recursive
  args:
    chdir: "{{ ansible_user_dir }}/.oh-my-bash"

- name: "[OHMYBASH] Configure ssh signinkey"
  git_config:
    name: user.signingkey
    repo: "{{ ansible_user_dir }}/.oh-my-bash"
    scope: local
    value: "{{ lookup('onepassword', 'op://Private/osmollo/public key') }}"

