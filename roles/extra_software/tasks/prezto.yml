---

- import_role:
    name: common
    tasks_from: zsh.yml

- name: "[PREZTO] check if previous oh_my_zsh installation exists"
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: ohmyzshdir_exists

- name: "[PREZTO] install prezto"
  become: false
  become_user: "{{ ansible_user }}"
  block:
    - name: "[PREZTO] creating backups"
      copy:
        src: "{{ item }}"
        dest: "{{ item }}.bkp"
        remote_src: true
      loop:
        - "{{ ansible_env.HOME }}/.oh-my-zsh"
        - "{{ ansible_user_dir }}/.zshrc"

    - name: "[PREZTO] delete old files/directories"
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_env.HOME }}/.oh-my-zsh"
        - "{{ ansible_user_dir }}/.zshrc"
  when: ohmyzshdir_exists.stat.exists

- name: "[PREZTO] install prezto"
  become: false
  become_user: "{{ ansible_user }}"
  block:
    - name: "[PREZTO] Clone prezto repository"
      git:
        repo: "{{ prezto_repo }}"
        dest: "{{ ansible_user_dir }}/.zprezto"
        clone: true
        key_file: "/home/{{ ansible_user }}/.ssh/id_rsa"
        accept_hostkey: true
        recursive: true
        version: master
      ignore_errors: true

    - name: "[PREZTO] create prezto directory"
      file:
        path: "{{ ansible_user_dir }}/.zprezto/runcoms"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: "[PREZTO] set autocomplete special directories in prezto config"
      lineinfile:
        path: "{{ ansible_user_dir }}/.zprezto/runcoms/zpreztorc"
        line: "zstyle ':completion:*' special-dirs true"
        state: present
        create: true
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: "[PREZTO] find prezto config files"
      find:
        paths: "{{ ansible_user_dir }}/.zprezto/runcoms"
        patterns: "^(?!README).*$"
        use_regex: true
        file_type: file
      register: find_response

    - name: "[PREZTO] create links to config files"
      vars:
        id_query: "[].path"
      file:
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/.{{ item | basename }}"
        state: link
      loop: "{{ find_response.files | json_query(id_query) }}"

- name: "[PREZTO] Change $SHELL variable for {{ ansible_user }}"
  user:
    name: "{{ ansible_user }}"
    shell: /usr/bin/zsh

- name: "[PREZTO] ZSH config for snap apps in KDE menu"
  lineinfile:
    path: /etc/zsh/zprofile
    line: "emulate sh -c 'source /etc/profile.d/apps-bin-path.sh'"
  when:
    - desktop_environment == "kde"
    - linux_distribution in ['ubuntu', 'debian']
